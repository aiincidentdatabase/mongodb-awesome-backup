name: Deploy to Amazon ECR

on: [push]
  # release:
  #   types: [ created ]

env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: mongodb-awesome-backup  # set this to your Amazon ECR repository name

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR

          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/d4w2c1x5
          docker build -t mongodb-awesome-backup .
          docker tag mongodb-awesome-backup:latest public.ecr.aws/d4w2c1x5/mongodb-awesome-backup:latest
          docker push public.ecr.aws/d4w2c1x5/mongodb-awesome-backup:latest

          # Old commands
          #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          #echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
